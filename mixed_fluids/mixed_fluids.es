[WARNING]
WARNING: DO NOT EDIT THIS FILE DIRECTLY!
Use only E-Studio to edit this file.
Editing of this file from any other means is not supported
and may corrupt the experiment design specification.
Technical support will not be able to address any issue in
regards to this file format.

[Experiment]
VersionMajor=1
VersionMinor=2
VersionInternal=1
VersionBuild=94
_VersionPersist=6
Root="SessionProc"
Author="Paul F.C. Groot"
Abstract="Created by Paul Groot, 2010-08-23\r\n(c) 2010-2011, Academic Medical Center Amsterdam\r\n\r\n$Rev::               $:  Revision of last commit\r\n$Author::            $:  Author of last commit\r\n$Date::              $:  Date of last commit\r\n\r\n_____________________\r\nAanpassingen 2011-05-17 (PG):\r\n\r\nDLL interface aangepast om 2 (of meer) pompen aan te sturen.\r\n(Voor project Liselotte van Bloemendaal, VUmc)\r\nTevens manual bolus vervangen door volume bolus.\r\n(Manual bolus bleek niet handig en incorrecte volumes af te geven.)\r\n\r\n______________________\r\nAanpassingen 2011-05-20 (PG):\r\nVersie van Eric (pavlovian fluid) gekopieerd en aangepast zodat\r\nhet meer overeenkomt met het milkshake paradigm van Stice et al.\r\n(Zie matlab scripts)\r\nTevens een wijziging in bolus preparatie zodat er een duration\r\nopgegeven kan worden ipv manual/volume.\r\nTaak vereenvoudigd door overbodige attributen en nesting constructies te verwijderen.\r\n\r\n"
Notes="\r\nCreated by Paul Groot, 2010-08-23\r\n(c) 2010-2011, Academic Medical Center Amsterdam\r\n"
Creation=1282573085

[Device0]
_VersionPersist=1
OpenDevice=1
Width=1024
Height=768
Bpp=32
Name="Display"
Class="Display"

[Device1]
_VersionPersist=1
OpenDevice=0
Channels=2
Samples=22050
Bps=16
Name="Sound"
Class="Sound"

[Device2]
_VersionPersist=1
OpenDevice=1
CollectionMode=1
EmulateDeviceName=""
CapsLock=0
NumLock=1
Name="Keyboard"
Class="Keyboard"

[Device3]
_VersionPersist=1
OpenDevice=1
CollectionMode=1
EmulateDeviceName=""
OpenMode=0
ShowCursor=0
Name="Mouse"
Class="Mouse"

[DataFile]
WarnBeforeOverwrite=1
WarnIfConvertFailed=1
RemoveERecoveryFile=0
ReceiveFeedbackDuringDataFileConversion=1
LogLevel(2).Name="Block"
LogLevel(3).Name="Trial"
LogLevel(4).Name="SubTrial"
LogLevel(5).Name="LogLevel5"
LogLevel(6).Name="LogLevel6"
LogLevel(7).Name="LogLevel7"
LogLevel(8).Name="LogLevel8"
LogLevel(9).Name="LogLevel9"
LogLevel(10).Name="LogLevel10"

[StartupInfo]
DisplaySummary=1
UseDefaults=0

[StartupInfo1]
Name="Subject"
Prompt="Please enter the Subject Number (1-32767, 0=No Data Logging):"
DataType=0
Enabled=1
PromptEnabled=1
Default="1"
Min=0
Max=32767
PrivateFlags=268435477
PrivateInfo=1

[StartupInfo2]
Name="Session"
Prompt="Welke Sessie?"
DataType=0
Enabled=1
PromptEnabled=1
Default="1"
Min=1
Max=9999
PrivateFlags=268435477
PrivateInfo=1

[StartupInfo3]
Name="Group"
Prompt="Please enter Subject's Group (0-32767):"
DataType=0
Enabled=0
PromptEnabled=0
Default="1"
Min=0
Max=32767

[StartupInfo4]
Name="Name"
Prompt="Please enter Subject's Name:"
DataType=1
Enabled=0
PromptEnabled=0
Default=""
MaxLength=255

[StartupInfo5]
Name="Age"
Prompt="Please enter Subject's Age (0-150):"
DataType=0
Enabled=0
PromptEnabled=0
Default="0"
Min=0
Max=150

[StartupInfo6]
Name="Sex"
Prompt="Please enter Subject's Sex:"
DataType=2
Enabled=0
PromptEnabled=0
Default="male"
Choice(1).Value="male"
Choice(2).Value="female"

[StartupInfo7]
Name="Handedness"
Prompt="Enter Subject's Handedness:"
DataType=2
Enabled=0
PromptEnabled=0
Default="left"
Choice(1).Value="left"
Choice(2).Value="right"

[StartupInfo8]
Name="ResearcherID"
Prompt="Please enter Researcher's ID:"
DataType=0
Enabled=0
PromptEnabled=0
Default="1"
Min=0
Max=32767

[StartupInfo9]
Name="BolusVol"
Prompt="Volume per delivery in ml"
DataType=1
Enabled=1
PromptEnabled=1
Default="0.2"
MaxLength=255

[Object0]
_Version=65536
_ExtentX=2646
_ExtentY=1323
_StockProps=0
VersionMajor=1
VersionMinor=2
VersionInternal=1
VersionBuild=67
_ItemList="Intro;PumpParameters;ConnectPumps;PreparePumps;WaitMRI;SaveStartTime;BlockList;DisconnectPumps;TheEnd"
_VersionPersist=1
FlowLines(0).Count=9
FlowLines(0).FlowItem(0).Name="Intro"
FlowLines(0).FlowItem(1).Name="PumpParameters"
FlowLines(0).FlowItem(2).Name="ConnectPumps"
FlowLines(0).FlowItem(3).Name="PreparePumps"
FlowLines(0).FlowItem(4).Name="WaitMRI"
FlowLines(0).FlowItem(5).Name="SaveStartTime"
FlowLines(0).FlowItem(6).Name="BlockList"
FlowLines(0).FlowItem(7).Name="DisconnectPumps"
FlowLines(0).FlowItem(8).Name="TheEnd"
LogData=1
Name="SessionProc"
TypeName="Procedure"
Tag=""
Notes=""

[Object1]
_Version=65536
_ExtentX=2646
_ExtentY=1323
_StockProps=0
VersionMajor=1
VersionMinor=2
VersionInternal=1
VersionBuild=67
Logging("Reward").Log=-1
Logging("Picture").Log=-1
Logging("ISI_ms").Log=-1
Logging("Bolus_ms").Log=-1
_ItemList="ITIs;TrialProcPaired;TrialProcUnpaired"
_VersionPersist=1
VersionMajor=1
VersionMinor=2
VersionInternal=1
VersionBuild=67
Order=1
OrderBy=0
ResetEveryRun=0
HideLevelsWithZeroWeight=0
CycleDef=0
CycleValueSamples=0
CycleValueCondition=""
ExitDef=0
ExitValueCycles=1
ExitValueSamples=1
ExitValueSeconds=0
ExitValueCondition=""
LoadMethod=0
Filename=""
UserAttributes=4
Attributes("Weight").DefaultValue="1"
Attributes("Weight").Visible=1
Attributes("Weight").Width=75
Attributes("Weight").OrderIndex=0
Attributes("Nested").DefaultValue=""
Attributes("Nested").Visible=1
Attributes("Nested").Width=150
Attributes("Nested").OrderIndex=1
Attributes("Procedure").DefaultValue="TrialProc"
Attributes("Procedure").Visible=1
Attributes("Procedure").Width=122
Attributes("Procedure").OrderIndex=2
Attributes(1).Name="Reward"
Attributes(1).DefaultValue="0"
Attributes(1).VarType=8
Attributes(1).VarTypeInternal=8
Attributes(1).Visible=1
Attributes(1).Width=75
Attributes(2).Name="Picture"
Attributes(2).DefaultValue="1"
Attributes(2).VarType=8
Attributes(2).VarTypeInternal=8
Attributes(2).Visible=1
Attributes(2).Width=142
Attributes(3).Name="ISI_ms"
Attributes(3).DefaultValue="1000"
Attributes(3).VarType=8
Attributes(3).VarTypeInternal=8
Attributes(3).Visible=1
Attributes(3).Width=75
Attributes(4).Name="Bolus_ms"
Attributes(4).DefaultValue="0"
Attributes(4).VarType=8
Attributes(4).VarTypeInternal=8
Attributes(4).Visible=1
Attributes(4).Width=75
Levels=4
Levels(1).ValueString="6\tITIs\tTrialProcPaired\t1\timages/fig_001.bmp\t3000\t5000\t"
Levels(2).ValueString="6\tITIs\tTrialProcPaired\t2\timages/fig_002.bmp\t3000\t5000\t"
Levels(3).ValueString="4\tITIs\tTrialProcUnpaired\t0\timages/fig_001.bmp\t0\t0\t"
Levels(4).ValueString="4\tITIs\tTrialProcUnpaired\t0\timages/fig_002.bmp\t0\t0\t"
Name="TrialList"
TypeName="List"
Tag=""
Notes=""

[Object2]
_Version=65536
_ExtentX=2646
_ExtentY=1323
_StockProps=0
VersionMajor=1
VersionMinor=2
VersionInternal=1
VersionBuild=67
_ItemList="InitPump;SetPreRelease;CS;ISI;SendBolus300ms;Bolus;Swallow;ITI;SaveTimesPaired;SaveTimes;CheckAbort"
_VersionPersist=1
FlowLines(0).Count=11
FlowLines(0).FlowItem(0).Name="InitPump"
FlowLines(0).FlowItem(1).Name="SetPreRelease"
FlowLines(0).FlowItem(2).Name="CS"
FlowLines(0).FlowItem(3).Name="ISI"
FlowLines(0).FlowItem(4).Name="SendBolus300ms"
FlowLines(0).FlowItem(5).Name="Bolus"
FlowLines(0).FlowItem(6).Name="Swallow"
FlowLines(0).FlowItem(7).Name="ITI"
FlowLines(0).FlowItem(8).Name="SaveTimesPaired"
FlowLines(0).FlowItem(9).Name="SaveTimes"
FlowLines(0).FlowItem(10).Name="CheckAbort"
LogData=1
Name="TrialProcPaired"
TypeName="Procedure"
Tag=""
Notes=""

[Object3]
_Version=65536
_ExtentX=2646
_ExtentY=1323
_StockProps=0
VersionMajor=1
VersionMinor=2
VersionInternal=1
VersionBuild=67
Logging("OnsetDelay").Log=0
Logging("OnsetTime").Log=-1
Logging("DurationError").Log=0
Logging("PreRelease").Log=0
Logging("Duration").Log=0
Logging("StartTime").Log=0
Logging("OffsetTime").Log=0
Logging("FinishTime").Log=0
Logging("TimingMode").Log=0
Logging("CustomOnsetTime").Log=0
Logging("CustomOffsetTime").Log=0
Logging("ActionDelay").Log=0
Logging("ActionTime").Log=0
Logging("TargetOffsetTime").Log=0
Logging("TargetOnsetTime").Log=0
Logging("OffsetDelay").Log=0
Logging("RTTime").Log=0
Logging("ACC").Log=0
Logging("RT").Log=0
Logging("RESP").Log=0
Logging("CRESP").Log=0
Logging("Tag").Log=0
_VersionPersist=1
VersionMajor=1
VersionMinor=2
VersionInternal=1
VersionBuild=67
Duration="2000"
JumpLabel=""
TimingMode=0
PreRelease="750"
OnsetSync=1
OffsetSync=0
Filename="[Picture]"
Stretch="No"
MirrorUpDown="No"
MirrorLeftRight="No"
BackColor="silver"
BackStyle="opaque"
BorderColor="black"
BorderWidth="0"
X="center"
Y="center"
Width="100%"
Height="100%"
XAlign="center"
YAlign="center"
AlignHorizontal="center"
AlignVertical="center"
ClearAfter="No"
SourceColorKey="white"
UseSourceColorKey="Yes"
Name="CS"
TypeName="ImageDisplay"
Tag=""
Notes="Use 500ms prerelease to sync and prepare bolus\r\nWe assume bolus delivery is about 300 ms (max).\r\nTo re-sync the communication heart-beat just before delivery, we allow about 200ms "

[Object4]
_Version=131072
_ExtentX=2646
_ExtentY=1323
_StockProps=0
VersionMajor=1
VersionMinor=2
VersionInternal=1
VersionBuild=67
_VersionPersist=1
Code="' select the picture to show\n' this could also be done without any scripting by putting\n' the image filename (and path) in the attribute list.\n' If the reward is implicitly defining the picture, then the\n' picture attibute reference below could be replaced by the reward.\n\nDim bmp as String\nSelect Case c.GetAttrib(\"picture\")\n\tCase \"1\"\n \t\tbmp = c.GetAttrib(\"fig1\")\n\tCase \"2\"\n \t\tbmp = c.GetAttrib(\"fig2\")\n\tCase Else\n\t\tDebug.Print \"Unknown picture ID: \" & c.GetAttrib(\"picture\")\nEnd Select\n\nc.SetAttrib \"bmp\", (\"images/\" & bmp)\n\n#if DEBUG_LEVEL>=1 then\n\tDebug.Print \"Starting trail: \" & c.GetAttrib(\"TrialList.Sample\")\n#end if\n"
Name="SelectPicture"
TypeName="InLine"
Tag=""
Notes=""

[Object5]
_Version=65536
_ExtentX=2646
_ExtentY=1323
_StockProps=0
VersionMajor=1
VersionMinor=2
VersionInternal=1
VersionBuild=67
Logging("OnsetDelay").Log=0
Logging("OnsetTime").Log=0
Logging("DurationError").Log=0
Logging("PreRelease").Log=0
Logging("Duration").Log=0
Logging("StartTime").Log=0
Logging("OffsetTime").Log=0
Logging("FinishTime").Log=0
Logging("TimingMode").Log=0
Logging("CustomOnsetTime").Log=0
Logging("CustomOffsetTime").Log=0
Logging("ActionDelay").Log=0
Logging("ActionTime").Log=0
Logging("TargetOffsetTime").Log=0
Logging("TargetOnsetTime").Log=0
Logging("OffsetDelay").Log=0
Logging("RTTime").Log=-1
Logging("ACC").Log=0
Logging("RT").Log=0
Logging("RESP").Log=0
Logging("CRESP").Log=0
Logging("Tag").Log=0
Input(0)=!Data0
_VersionPersist=1
VersionMajor=1
VersionMinor=2
VersionInternal=1
VersionBuild=67
Text="Waiting for scanner...\n(space to continue)"
ForeColor="black"
BackColor="silver"
BackStyle="opaque"
BorderColor="black"
BorderWidth="2"
X="center"
Y="center"
Width="100%"
Height="100%"
XAlign="center"
YAlign="center"
AlignHorizontal="center"
AlignVertical="center"
FontName="Courier New"
FontSize="18"
FontBold="Yes"
FontItalic="No"
FontUnderline="No"
FontStrikeout="No"
WordWrap=1
ClearAfter="No"
Duration="-1"
JumpLabel=""
TimingMode=0
PreRelease="0"
OnsetSync=1
OffsetSync=0
Name="WaitMRI"
TypeName="TextDisplay"
Tag=""
Notes=""

[Data0]
DeviceName="Keyboard"
DeviceClass="Keyboard"
AllowableInput="{SPACE}5"
CorrectInput=""
TimeLimit=""
MaxCount="1"
InputAction=1
SyncOwnerDuration=1
Enabled=1
FlushInputBuffer="Yes"
TerminationInput=""
UserTag=""
ResponseMode="All"
ProcessBackspace="Yes"

[Object6]
_Version=65536
_ExtentX=2646
_ExtentY=1323
_StockProps=0
VersionMajor=1
VersionMinor=2
VersionInternal=1
VersionBuild=67
Logging("OnsetDelay").Log=0
Logging("OnsetTime").Log=0
Logging("DurationError").Log=0
Logging("PreRelease").Log=0
Logging("Duration").Log=0
Logging("StartTime").Log=0
Logging("OffsetTime").Log=0
Logging("FinishTime").Log=0
Logging("TimingMode").Log=0
Logging("CustomOnsetTime").Log=0
Logging("CustomOffsetTime").Log=0
Logging("ActionDelay").Log=0
Logging("ActionTime").Log=0
Logging("TargetOffsetTime").Log=0
Logging("TargetOnsetTime").Log=0
Logging("OffsetDelay").Log=0
Logging("RTTime").Log=0
Logging("ACC").Log=0
Logging("RT").Log=0
Logging("RESP").Log=0
Logging("CRESP").Log=0
Logging("Tag").Log=0
Input(0)=!Data1
_VersionPersist=1
VersionMajor=1
VersionMinor=2
VersionInternal=1
VersionBuild=67
Text="Fluid Reward"
ForeColor="white"
BackColor="gray"
BackStyle="opaque"
BorderColor="black"
BorderWidth="0"
X="center"
Y="center"
Width="100%"
Height="100%"
XAlign="center"
YAlign="center"
AlignHorizontal="center"
AlignVertical="center"
FontName="Courier New"
FontSize="24"
FontBold="Yes"
FontItalic="No"
FontUnderline="No"
FontStrikeout="No"
WordWrap=0
ClearAfter="Yes"
Duration="3000"
JumpLabel=""
TimingMode=0
PreRelease="0"
OnsetSync=1
OffsetSync=0
Name="Intro"
TypeName="TextDisplay"
Tag=""
Notes=""

[Data1]
DeviceName="Keyboard"
DeviceClass="Keyboard"
AllowableInput="{ANY}"
CorrectInput=""
TimeLimit=""
MaxCount="1"
InputAction=1
SyncOwnerDuration=1
Enabled=1
FlushInputBuffer="Yes"
TerminationInput=""
UserTag=""
ResponseMode="All"
ProcessBackspace="Yes"

[Object7]
_Version=131072
_ExtentX=2646
_ExtentY=1323
_StockProps=0
VersionMajor=1
VersionMinor=2
VersionInternal=1
VersionBuild=67
_VersionPersist=1
Code="\n' remember start time of MRI\nlStartOfMRI = WaitMRI.RTTime\n\n' keep log timer in sync: reset log timer to zero at start of MRI sequence\nDIANETINTERFACE_SetLogTimer(0)"
Name="SaveStartTime"
TypeName="InLine"
Tag=""
Notes=""

[Object8]
_Version=65536
_ExtentX=2646
_ExtentY=1323
_StockProps=0
VersionMajor=1
VersionMinor=2
VersionInternal=1
VersionBuild=67
Logging("OnsetDelay").Log=0
Logging("OnsetTime").Log=-1
Logging("DurationError").Log=0
Logging("PreRelease").Log=0
Logging("Duration").Log=0
Logging("StartTime").Log=0
Logging("OffsetTime").Log=0
Logging("FinishTime").Log=0
Logging("TimingMode").Log=0
Logging("CustomOnsetTime").Log=0
Logging("CustomOffsetTime").Log=0
Logging("ActionDelay").Log=0
Logging("ActionTime").Log=0
Logging("TargetOffsetTime").Log=0
Logging("TargetOnsetTime").Log=0
Logging("OffsetDelay").Log=0
Logging("RTTime").Log=0
Logging("ACC").Log=0
Logging("RT").Log=0
Logging("RESP").Log=0
Logging("CRESP").Log=0
Logging("Tag").Log=0
_VersionPersist=1
VersionMajor=1
VersionMinor=2
VersionInternal=1
VersionBuild=67
Text="+"
ForeColor="black"
BackColor="silver"
BackStyle="opaque"
BorderColor="black"
BorderWidth="0"
X="center"
Y="center"
Width="100%"
Height="100%"
XAlign="center"
YAlign="center"
AlignHorizontal="center"
AlignVertical="center"
FontName="Courier New"
FontSize="36"
FontBold="Yes"
FontItalic="No"
FontUnderline="No"
FontStrikeout="No"
WordWrap=1
ClearAfter="No"
Duration="[Bolus_ms]"
JumpLabel=""
TimingMode=0
PreRelease="100"
OnsetSync=1
OffsetSync=0
Name="Bolus"
TypeName="TextDisplay"
Tag=""
Notes="This object represents the duration of the bolus delivery (1sec)"

[Object9]
_Version=65536
_ExtentX=2646
_ExtentY=1323
_StockProps=0
VersionMajor=1
VersionMinor=2
VersionInternal=1
VersionBuild=67
Logging("OnsetDelay").Log=0
Logging("OnsetTime").Log=-1
Logging("DurationError").Log=0
Logging("PreRelease").Log=0
Logging("Duration").Log=0
Logging("StartTime").Log=0
Logging("OffsetTime").Log=0
Logging("FinishTime").Log=0
Logging("TimingMode").Log=0
Logging("CustomOnsetTime").Log=0
Logging("CustomOffsetTime").Log=0
Logging("ActionDelay").Log=0
Logging("ActionTime").Log=0
Logging("TargetOffsetTime").Log=0
Logging("TargetOnsetTime").Log=0
Logging("OffsetDelay").Log=0
Logging("RTTime").Log=0
Logging("ACC").Log=0
Logging("RT").Log=0
Logging("RESP").Log=0
Logging("CRESP").Log=0
Logging("Tag").Log=0
_VersionPersist=1
VersionMajor=1
VersionMinor=2
VersionInternal=1
VersionBuild=67
Text="+"
ForeColor="black"
BackColor="silver"
BackStyle="opaque"
BorderColor="black"
BorderWidth="0"
X="center"
Y="center"
Width="100%"
Height="100%"
XAlign="center"
YAlign="center"
AlignHorizontal="center"
AlignVertical="center"
FontName="Courier New"
FontSize="36"
FontBold="Yes"
FontItalic="No"
FontUnderline="No"
FontStrikeout="No"
WordWrap=1
ClearAfter="No"
Duration="5000"
JumpLabel=""
TimingMode=0
PreRelease="1000"
OnsetSync=1
OffsetSync=0
Name="Fixation"
TypeName="TextDisplay"
Tag=""
Notes=""

[Object10]
_Version=65536
_ExtentX=2646
_ExtentY=1323
_StockProps=0
VersionMajor=1
VersionMinor=2
VersionInternal=1
VersionBuild=67
Logging("OnsetDelay").Log=0
Logging("OnsetTime").Log=0
Logging("DurationError").Log=0
Logging("PreRelease").Log=0
Logging("Duration").Log=0
Logging("StartTime").Log=0
Logging("OffsetTime").Log=0
Logging("FinishTime").Log=0
Logging("TimingMode").Log=0
Logging("CustomOnsetTime").Log=0
Logging("CustomOffsetTime").Log=0
Logging("ActionDelay").Log=0
Logging("ActionTime").Log=0
Logging("TargetOffsetTime").Log=0
Logging("TargetOnsetTime").Log=0
Logging("OffsetDelay").Log=0
Logging("RTTime").Log=0
Logging("ACC").Log=0
Logging("RT").Log=0
Logging("RESP").Log=0
Logging("CRESP").Log=0
Logging("Tag").Log=0
Input(0)=!Data2
_VersionPersist=1
VersionMajor=1
VersionMinor=2
VersionInternal=1
VersionBuild=67
Text="einde van dit experiment"
ForeColor="white"
BackColor="gray"
BackStyle="opaque"
BorderColor="black"
BorderWidth="0"
X="center"
Y="center"
Width="100%"
Height="100%"
XAlign="center"
YAlign="center"
AlignHorizontal="center"
AlignVertical="center"
FontName="Courier New"
FontSize="24"
FontBold="Yes"
FontItalic="No"
FontUnderline="No"
FontStrikeout="No"
WordWrap=1
ClearAfter="No"
Duration="10000"
JumpLabel=""
TimingMode=0
PreRelease="0"
OnsetSync=1
OffsetSync=0
Name="TheEnd"
TypeName="TextDisplay"
Tag=""
Notes=""

[Data2]
DeviceName="Keyboard"
DeviceClass="Keyboard"
AllowableInput="{ENTER}{SPACE}{ESCAPE}"
CorrectInput=""
TimeLimit=""
MaxCount="1"
InputAction=1
SyncOwnerDuration=1
Enabled=1
FlushInputBuffer="Yes"
TerminationInput=""
UserTag=""
ResponseMode="All"
ProcessBackspace="Yes"

[Object11]
_Version=131072
_ExtentX=2646
_ExtentY=1323
_StockProps=0
VersionMajor=1
VersionMinor=2
VersionInternal=1
VersionBuild=67
_VersionPersist=1
Code="' save times that are available in the all conditions\nc.SetAttrib \"CS_Onset\", (CS.OnsetTime - lStartOfMRI)\n\n"
Name="SaveTimes"
TypeName="InLine"
Tag=""
Notes=""

[Object12]
_Version=131072
_ExtentX=2646
_ExtentY=1323
_StockProps=0
VersionMajor=1
VersionMinor=2
VersionInternal=1
VersionBuild=67
_VersionPersist=1
Code="if GetUserBreakState()<>0 then\n\tTrialList.Terminate\n\tBlockList.Terminate\nend if\n\n\n"
Name="CheckAbort"
TypeName="InLine"
Tag=""
Notes=""

[Object13]
_Version=131072
_ExtentX=2646
_ExtentY=1323
_StockProps=0
VersionMajor=1
VersionMinor=2
VersionInternal=1
VersionBuild=67
_VersionPersist=1
Code="\n' This script uses the DianetStarCOM.DLL function library for communicating with the BBraun infusion pump\n' device. The DLL must be installed (or copied) in the Windows system directory or\n' in the same directory of the EPrime script. The function calls are declared\n' in the user script (View->Script->User tab)\n\nDim hPump as long\nDim iPump as Integer\nDim strPump as string\n\n' open a logfile ot be able to track any problems\nDim strLogfile as String\nstrLogfile = \"pumplog-\" & ebContext.GetAttrib(\"Subject\") & \"-\" & ebContext.GetAttrib(\"Session\") & \".txt\"\nlResult = DIANETINTERFACE_OpenLogFile(strLogfile,0,CDS_LOGLEVEL_INFO%, Clock.Read())\n\n' keep cursor on screen when selecting multiple pumps\nMouse.ShowCursor True\nfor iPump=LBound(PUMP_handles) to UBound(PUMP_handles)\n\tstrPump = \"#\" & CStr(iPump) & \"-\" & PUMP_names(iPump)\n\thPump = SelectPortAndConnect(\"Select channel for \" & strPump)\n\tPUMP_handles(iPump) = hPump\n\tif hPump=-1 then\n\t\tMsgBox(strPump & \" preparation failed or canceled\")\n\t'\texit sub < might just cancel to continue without pump\n\telse\n\t\tDebug.Print strPump & \" connection OK\"\n\n\t\tif Not EnterCCmode(hPump) then\n\t\t\tMsgBox(strPump & \" could not enter CC mode\")\n\t\t\tDIANETINTERFACE_Disconnect(hPump)\n\t\t\tPUMP_handles(iPump) = -1\n\t\telse\n\t\t\tPrintLimits(hPump)\n\t\t\tPrintStatus(hPump)\n\t\tend if\n\tend if\nnext\nMouse.ShowCursor False\n"
Name="ConnectPumps"
TypeName="InLine"
Tag=""
Notes=""

[Object14]
_Version=131072
_ExtentX=2646
_ExtentY=1323
_StockProps=0
VersionMajor=1
VersionMinor=2
VersionInternal=1
VersionBuild=67
_VersionPersist=1
Code="' Use 750ms pre-release to sync and prepare bolus\n' We assume start of bolus delivery takes about 300 ms (max).\n' So, at -750ms we start a resync command (prepare bolus or reset heartbeat). This\n' may take upto 450 msec. (This is ok since heartbeat interval is 500ms). Then, at\n' -300ms we start bolus delivery. This normally takes 200ms to complete, but may last\n' upto 300ms.\n\nDim timegiven as Long\nDim leftover as Long\nDim lStartBolusAt as long\n\n' first determine when the bolus command should be started\n' This works, even if we don't run a bolus (addition sleep time will automatically be included)\nlStartBolusAt = CS.OnsetTime + CS.Duration + ISI.Duration - BolusPrepDuration \n\n' iReward is in fact the pump index (zero is no reward)\nif iReward>0 then\n\t' a volume bolus should be reconfigured each delivery\n\tif Not PrepareVolBolus(hCurrentPump, c.GetAttrib(\"BolusVol\"), PUMP_names(iReward)) then\n\t\tDebug.Print \"PrepareVolBolus failed\"\n\tend if\nend if\n\n' how long must we sleep until we can send the bolus command\nleftover = lStartBolusAt - Clock.Read\n#if DEBUG_LEVEL>=1 then\n\tDebug.Print \"sleep before bolus: \" & leftover\n#end if\nif leftover>5 then\n\tif leftover>PumpKeepAliveInterval then\n\t\tDebug.Print \"Warning: sleep interval seems to be > \" & CStr(PumpKeepAliveInterval)\n\tend if\n\tSleep(leftover-5)\nend if\n\n' start bolus?\nif iReward>0 then\n\tDim bBolusOK as Boolean\n\tDim t0 as Long\n\tDim t1 as Long\n\tt0 = Clock.Read\n\t#if DEBUG_LEVEL>=1 then\n\t\tDebug.Print \"bolus at CS.Onset + \" & (t0 - CS.OnsetTime)\n\t#end if\n\tbBolusOK = StartBolus(hCurrentPump,false) ' bolus type VOLume (not MANual)\n\tt1 = Clock.Read ' the pump will be running now...\n\tc.SetAttrib \"BolusOK\", bBolusOK\n\tc.SetAttrib \"RewardPrepOnset\", (t0 - lStartOfMRI)\n\tc.SetAttrib \"RewardOnset\", (t1 - lStartOfMRI)\n\tc.SetAttrib \"RewardPrepDuration\", (t1 - t0)\n\tif bBolusOk then\n\t\t#if DEBUG_LEVEL>=1 then\n\t\t\tDebug.Print \"bolus preparation took \" & (t1 - t0) & \" ms\"\n\t\t#end if\n\telse\n\t\tDebug.Print \"ERROR: bolus not started\"\n\t\tif DIANETINTERFACE_IsConnected(hCurrentPump) then\n\t\t\t' only terminate if we started the experiment with pump\n\t\t\tTrialList.Terminate\n\t\t\tBlockList.Terminate\n\t\tend if\n\tend if\nend if\n\n' we assumed that starting the bolus took about 300ms. It will be less in most cases,\n' so just sleep again for the difference (this will be about 300ms if no bolus was given)\nleftover = (lStartBolusAt + BolusPrepDuration) - Clock.Read\n#if DEBUG_LEVEL>=1 then\n\tDebug.Print \"sleep after bolus:\" & leftover\n#end if\nif leftover>5 then\n\tSleep(leftover-5)\nend if\n"
Name="SendBolus300ms"
TypeName="InLine"
Tag=""
Notes=""

[Object15]
_Version=131072
_ExtentX=2646
_ExtentY=1323
_StockProps=0
VersionMajor=1
VersionMinor=2
VersionInternal=1
VersionBuild=67
_VersionPersist=1
Code="' disconnect pumps\n\nfor iPump=LBound(PUMP_handles) to UBound(PUMP_handles)\n\thPump = PUMP_handles(iPump)\n\tif DIANETINTERFACE_IsConnected(hPump) then\n\t\tPrintStatus hPump ' just for logging\n\n\t\t' first stop the pump\n\t\tlResult = StopPump(hPump)\n\n\t\t' reset target: set rate to low value to prevent CC->CA rate incompatibility errors\n\t\tlResult = DIANETINTERFACE_SetTargetValue(hPump, 0, 0, 0, 0, 0, -1, 0, (\"POMP \" & CStr(iPump) & \" ready\") )\n\n\t\t' return to documentation mode (ignore return code here)\n\t\tlResult = DIANETINTERFACE_SetMode(hPump, 1,CDS_MODE_DOKU%,-1)\n\t\tif lResult=0 then\n\t\t\tDebug.Print \"Switched back to DOCU mode; pump #\" & CStr(iPump)\n\t\telse\n\t\t\tDebug.Print \"ERROR: failed to switch back to DOCU mode: \" & lResult\n\t\tend if\n\n\t\t' release the RS232 connection\n\t\tDIANETINTERFACE_Disconnect(hPump)\n\t\tPUMP_handles(iPump) = -1\n\t\tDebug.Print \"Disconnected pump #\" & CStr(iPump)\n\tend if\nnext\n\nlResult = DIANETINTERFACE_CloseLogFile"
Name="DisconnectPumps"
TypeName="InLine"
Tag=""
Notes=""

[Object16]
_Version=65536
_ExtentX=2646
_ExtentY=1323
_StockProps=0
VersionMajor=1
VersionMinor=2
VersionInternal=1
VersionBuild=67
Logging("OnsetDelay").Log=0
Logging("OnsetTime").Log=-1
Logging("DurationError").Log=0
Logging("PreRelease").Log=0
Logging("Duration").Log=0
Logging("StartTime").Log=0
Logging("OffsetTime").Log=0
Logging("FinishTime").Log=0
Logging("TimingMode").Log=0
Logging("CustomOnsetTime").Log=0
Logging("CustomOffsetTime").Log=0
Logging("ActionDelay").Log=0
Logging("ActionTime").Log=0
Logging("TargetOffsetTime").Log=0
Logging("TargetOnsetTime").Log=0
Logging("OffsetDelay").Log=0
Logging("RTTime").Log=0
Logging("ACC").Log=0
Logging("RT").Log=0
Logging("RESP").Log=0
Logging("CRESP").Log=0
Logging("Tag").Log=0
_VersionPersist=1
VersionMajor=1
VersionMinor=2
VersionInternal=1
VersionBuild=67
Text="+"
ForeColor="black"
BackColor="silver"
BackStyle="opaque"
BorderColor="black"
BorderWidth="0"
X="center"
Y="center"
Width="100%"
Height="100%"
XAlign="center"
YAlign="center"
AlignHorizontal="center"
AlignVertical="center"
FontName="Courier New"
FontSize="36"
FontBold="Yes"
FontItalic="No"
FontUnderline="No"
FontStrikeout="No"
WordWrap=1
ClearAfter="No"
Duration="[ISI_ms]"
JumpLabel=""
TimingMode=0
PreRelease="750"
OnsetSync=1
OffsetSync=0
Name="ISI"
TypeName="TextDisplay"
Tag=""
Notes="DO NOT REMOVE\r\n\r\nUse 750ms prerelease to sync and prepare bolus\r\nWe assume start of bolus delivery takes about 300 ms (max).\r\nSo, at -750ms we start a resync command (prepare bolus or reset heartbeat). This\r\nmay take upto 450 msec. (This is ok since heartbeat interval is 500ms). THen, at\r\n-300ms we start bolus delivery. This normally takes 200ms to complete, but may last\r\nupto 300ms.\r\n"

[Object17]
_Version=65536
_ExtentX=2646
_ExtentY=1323
_StockProps=0
VersionMajor=1
VersionMinor=2
VersionInternal=1
VersionBuild=67
_ItemList="BlockProc"
_VersionPersist=1
VersionMajor=1
VersionMinor=2
VersionInternal=1
VersionBuild=67
Order=0
OrderBy=0
ResetEveryRun=0
HideLevelsWithZeroWeight=0
CycleDef=0
CycleValueSamples=1
CycleValueCondition=""
ExitDef=0
ExitValueCycles=1
ExitValueSamples=1
ExitValueSeconds=0
ExitValueCondition=""
LoadMethod=0
Filename=""
UserAttributes=0
Attributes("Weight").DefaultValue="1"
Attributes("Weight").Visible=1
Attributes("Weight").Width=75
Attributes("Weight").OrderIndex=0
Attributes("Nested").DefaultValue=""
Attributes("Nested").Visible=1
Attributes("Nested").Width=75
Attributes("Nested").OrderIndex=1
Attributes("Procedure").DefaultValue="BlockProc"
Attributes("Procedure").Visible=1
Attributes("Procedure").Width=75
Attributes("Procedure").OrderIndex=2
Levels=1
Levels(1).ValueString="5\t\tBlockProc\t"
Name="BlockList"
TypeName="List"
Tag=""
Notes=""

[Object18]
_Version=65536
_ExtentX=2646
_ExtentY=1323
_StockProps=0
VersionMajor=1
VersionMinor=2
VersionInternal=1
VersionBuild=67
_ItemList="Fixation;TrialList"
_VersionPersist=1
FlowLines(0).Count=2
FlowLines(0).FlowItem(0).Name="Fixation"
FlowLines(0).FlowItem(1).Name="TrialList"
LogData=1
Name="BlockProc"
TypeName="Procedure"
Tag=""
Notes=""

[Object19]
_Version=65536
_ExtentX=2646
_ExtentY=1323
_StockProps=0
VersionMajor=1
VersionMinor=2
VersionInternal=1
VersionBuild=67
Logging("ITI").Log=-1
_VersionPersist=1
VersionMajor=1
VersionMinor=2
VersionInternal=1
VersionBuild=67
Order=0
OrderBy=0
ResetEveryRun=0
HideLevelsWithZeroWeight=0
CycleDef=0
CycleValueSamples=0
CycleValueCondition=""
ExitDef=0
ExitValueCycles=1
ExitValueSamples=1
ExitValueSeconds=0
ExitValueCondition=""
LoadMethod=0
Filename=""
UserAttributes=1
Attributes("Weight").DefaultValue="1"
Attributes("Weight").Visible=1
Attributes("Weight").Width=75
Attributes("Weight").OrderIndex=0
Attributes("Nested").DefaultValue=""
Attributes("Nested").Visible=0
Attributes("Nested").Width=75
Attributes("Nested").OrderIndex=1
Attributes("Procedure").DefaultValue="TrialProc"
Attributes("Procedure").Visible=0
Attributes("Procedure").Width=122
Attributes("Procedure").OrderIndex=2
Attributes(1).Name="ITI"
Attributes(1).DefaultValue="2000"
Attributes(1).VarType=8
Attributes(1).VarTypeInternal=8
Attributes(1).Visible=1
Attributes(1).Width=75
Levels=100
Levels(1).ValueString="1\t\t\t1820\t"
Levels(2).ValueString="1\t\t\t1770\t"
Levels(3).ValueString="1\t\t\t4040\t"
Levels(4).ValueString="1\t\t\t2270\t"
Levels(5).ValueString="1\t\t\t1540\t"
Levels(6).ValueString="1\t\t\t5780\t"
Levels(7).ValueString="1\t\t\t6810\t"
Levels(8).ValueString="1\t\t\t6730\t"
Levels(9).ValueString="1\t\t\t3328\t"
Levels(10).ValueString="1\t\t\t5761\t"
Levels(11).ValueString="1\t\t\t2510\t"
Levels(12).ValueString="1\t\t\t1680\t"
Levels(13).ValueString="1\t\t\t5828\t"
Levels(14).ValueString="1\t\t\t3970\t"
Levels(15).ValueString="1\t\t\t2443\t"
Levels(16).ValueString="1\t\t\t5989\t"
Levels(17).ValueString="1\t\t\t6350\t"
Levels(18).ValueString="1\t\t\t3391\t"
Levels(19).ValueString="1\t\t\t2107\t"
Levels(20).ValueString="1\t\t\t5883\t"
Levels(21).ValueString="1\t\t\t2133\t"
Levels(22).ValueString="1\t\t\t5325\t"
Levels(23).ValueString="1\t\t\t6268\t"
Levels(24).ValueString="1\t\t\t2779\t"
Levels(25).ValueString="1\t\t\t6894\t"
Levels(26).ValueString="1\t\t\t5030\t"
Levels(27).ValueString="1\t\t\t2429\t"
Levels(28).ValueString="1\t\t\t3212\t"
Levels(29).ValueString="1\t\t\t2917\t"
Levels(30).ValueString="1\t\t\t3038\t"
Levels(31).ValueString="1\t\t\t4236\t"
Levels(32).ValueString="1\t\t\t1785\t"
Levels(33).ValueString="1\t\t\t6498\t"
Levels(34).ValueString="1\t\t\t4142\t"
Levels(35).ValueString="1\t\t\t3713\t"
Levels(36).ValueString="1\t\t\t3016\t"
Levels(37).ValueString="1\t\t\t1531\t"
Levels(38).ValueString="1\t\t\t5426\t"
Levels(39).ValueString="1\t\t\t4600\t"
Levels(40).ValueString="1\t\t\t5028\t"
Levels(41).ValueString="1\t\t\t3717\t"
Levels(42).ValueString="1\t\t\t2461\t"
Levels(43).ValueString="1\t\t\t2197\t"
Levels(44).ValueString="1\t\t\t1738\t"
Levels(45).ValueString="1\t\t\t3784\t"
Levels(46).ValueString="1\t\t\t6207\t"
Levels(47).ValueString="1\t\t\t2271\t"
Levels(48).ValueString="1\t\t\t5112\t"
Levels(49).ValueString="1\t\t\t4933\t"
Levels(50).ValueString="1\t\t\t4366\t"
Levels(51).ValueString="1\t\t\t5179\t"
Levels(52).ValueString="1\t\t\t2845\t"
Levels(53).ValueString="1\t\t\t6736\t"
Levels(54).ValueString="1\t\t\t2943\t"
Levels(55).ValueString="1\t\t\t4286\t"
Levels(56).ValueString="1\t\t\t5040\t"
Levels(57).ValueString="1\t\t\t1587\t"
Levels(58).ValueString="1\t\t\t6781\t"
Levels(59).ValueString="1\t\t\t4100\t"
Levels(60).ValueString="1\t\t\t3717\t"
Levels(61).ValueString="1\t\t\t1839\t"
Levels(62).ValueString="1\t\t\t1995\t"
Levels(63).ValueString="1\t\t\t3798\t"
Levels(64).ValueString="1\t\t\t2906\t"
Levels(65).ValueString="1\t\t\t2635\t"
Levels(66).ValueString="1\t\t\t4476\t"
Levels(67).ValueString="1\t\t\t5356\t"
Levels(68).ValueString="1\t\t\t2763\t"
Levels(69).ValueString="1\t\t\t6366\t"
Levels(70).ValueString="1\t\t\t3615\t"
Levels(71).ValueString="1\t\t\t6693\t"
Levels(72).ValueString="1\t\t\t3317\t"
Levels(73).ValueString="1\t\t\t3012\t"
Levels(74).ValueString="1\t\t\t4679\t"
Levels(75).ValueString="1\t\t\t4175\t"
Levels(76).ValueString="1\t\t\t5598\t"
Levels(77).ValueString="1\t\t\t3575\t"
Levels(78).ValueString="1\t\t\t5401\t"
Levels(79).ValueString="1\t\t\t6422\t"
Levels(80).ValueString="1\t\t\t1379\t"
Levels(81).ValueString="1\t\t\t6277\t"
Levels(82).ValueString="1\t\t\t4572\t"
Levels(83).ValueString="1\t\t\t2997\t"
Levels(84).ValueString="1\t\t\t2748\t"
Levels(85).ValueString="1\t\t\t3485\t"
Levels(86).ValueString="1\t\t\t3761\t"
Levels(87).ValueString="1\t\t\t3657\t"
Levels(88).ValueString="1\t\t\t2034\t"
Levels(89).ValueString="1\t\t\t3130\t"
Levels(90).ValueString="1\t\t\t1692\t"
Levels(91).ValueString="1\t\t\t2475\t"
Levels(92).ValueString="1\t\t\t6924\t"
Levels(93).ValueString="1\t\t\t4695\t"
Levels(94).ValueString="1\t\t\t6435\t"
Levels(95).ValueString="1\t\t\t2006\t"
Levels(96).ValueString="1\t\t\t3989\t"
Levels(97).ValueString="1\t\t\t5899\t"
Levels(98).ValueString="1\t\t\t2990\t"
Levels(99).ValueString="1\t\t\t4192\t"
Levels(100).ValueString="1\t\t\t6042\t"
Name="ITIs"
TypeName="List"
Tag=""
Notes="DO NOT REMOVE\r\nuniform random tussen 1000 en 7000.\r\nper block van 20: totaal = 80 sec"

[Object20]
_Version=131072
_ExtentX=2646
_ExtentY=1323
_StockProps=0
VersionMajor=1
VersionMinor=2
VersionInternal=1
VersionBuild=67
_VersionPersist=1
Code="\n'Dim hPump as long\t\n'Dim iPump as Integer\nfor iPump=LBound(PUMP_handles) to UBound(PUMP_handles)\n\thPump = PUMP_handles(iPump)\n\tif DIANETINTERFACE_IsConnected(hPump) then\n\t\t' if we are goiing to prepare a bolus and configure a total volume (VTBD), then the \n\t\t' current remainvtbd must be clear first\n\t\tif Not ResetInfusedVolume(hPump) then\n\t\t\tDebug.Print \"Couldn't reset infused volume\"\n\t\tend if\n\n\t\t' setup bolus delivery. This can be manual or volume mode. For manual you only have\n\t\t' to do this once. For volume you should reset the volume each delivery.\n\t\t' We use a volume bolus because it is more accurate and not restricted to a fixed volume/rate.\n\t\tif Not PrepareBolus(hPump, c.GetAttrib(\"BolusVol\"), PUMP_duration(iPump), 0, PUMP_names(iPump)) then\n\t\t\tMsgBox(\"Could not prepare bolus\")\n\t\t\texit sub\n\t\tend if\n\n\t\tif Not StartPump(hPump) then\n\t\t\tMsgBox(\"Could start pump\")\n\t\t\texit sub\n\t\tend if\n\n\t\t#if DEBUG_LEVEL>=1 then\n\t\t\tDebug.Print \"Pump preparation OK, pump #\" & CStr(iPump)\n\t\t#end if\n\tend if\nnext\n"
Name="PreparePumps"
TypeName="InLine"
Tag=""
Notes=""

[Object21]
_Version=131072
_ExtentX=2646
_ExtentY=1323
_StockProps=0
VersionMajor=1
VersionMinor=2
VersionInternal=1
VersionBuild=67
_VersionPersist=1
Code="' use pre-release time to resync pump 'keep alive signal' and deliver bolus\nDebug.Assert PumpKeepAliveInterval>BolusPrepDuration\nISI.PreRelease = PumpKeepAliveInterval + BolusPrepDuration - 50\nDebug.Assert ISI.PreRelease<= CLng(c.GetAttrib(\"ISI_ms\")) ' NB do not use ISI.Duration directly because it's not set yet...\n"
Name="SetPreRelease"
TypeName="InLine"
Tag=""
Notes=""

[Object22]
_Version=131072
_ExtentX=2646
_ExtentY=1323
_StockProps=0
VersionMajor=1
VersionMinor=2
VersionInternal=1
VersionBuild=67
_VersionPersist=1
Code="\n' prepare a few variables for trial scripts\nDim hCurrentPump as long\nDim iReward as integer\niReward = c.GetAttrib(\"Reward\")\nif iReward>0 And iReward<=UBound(PUMP_handles) then\n\thCurrentPump = PUMP_handles(iReward)\nelse\n\thCurrentPump = -1\n\tif iReward>0 then\n\t\tDebug.Print \"Reward number cannot be larger than the number of configured pumps: \" & CStr(iReward) & \"<=\" & CStr(UBound(PUMP_handles))\n\t\tiReward = 0\n\tend if\nend if\n"
Name="InitPump"
TypeName="InLine"
Tag=""
Notes=""

[Object23]
_Version=131072
_ExtentX=2646
_ExtentY=1323
_StockProps=0
VersionMajor=1
VersionMinor=2
VersionInternal=1
VersionBuild=67
_VersionPersist=1
Code="if c.GetAttrib(\"Session\") = 7 then\n\tClock.Scale = 0.5\nend if\n"
Name="Turbo"
TypeName="InLine"
Tag=""
Notes=""

[Object24]
_Version=65536
_ExtentX=2646
_ExtentY=1323
_StockProps=0
VersionMajor=1
VersionMinor=2
VersionInternal=1
VersionBuild=67
Logging("OnsetDelay").Log=0
Logging("OnsetTime").Log=-1
Logging("DurationError").Log=0
Logging("PreRelease").Log=0
Logging("Duration").Log=0
Logging("StartTime").Log=0
Logging("OffsetTime").Log=0
Logging("FinishTime").Log=0
Logging("TimingMode").Log=0
Logging("CustomOnsetTime").Log=0
Logging("CustomOffsetTime").Log=0
Logging("ActionDelay").Log=0
Logging("ActionTime").Log=0
Logging("TargetOffsetTime").Log=0
Logging("TargetOnsetTime").Log=0
Logging("OffsetDelay").Log=0
Logging("RTTime").Log=0
Logging("ACC").Log=0
Logging("RT").Log=0
Logging("RESP").Log=0
Logging("CRESP").Log=0
Logging("Tag").Log=0
_VersionPersist=1
VersionMajor=1
VersionMinor=2
VersionInternal=1
VersionBuild=67
Text="slikken"
ForeColor="black"
BackColor="silver"
BackStyle="opaque"
BorderColor="black"
BorderWidth="0"
X="center"
Y="center"
Width="100%"
Height="100%"
XAlign="center"
YAlign="center"
AlignHorizontal="center"
AlignVertical="center"
FontName="Courier New"
FontSize="36"
FontBold="Yes"
FontItalic="No"
FontUnderline="No"
FontStrikeout="No"
WordWrap=1
ClearAfter="No"
Duration="2000"
JumpLabel=""
TimingMode=0
PreRelease="0"
OnsetSync=1
OffsetSync=0
Name="Swallow"
TypeName="TextDisplay"
Tag=""
Notes="This object represents the duration of the bolus delivery (1sec)"

[Object25]
_Version=65536
_ExtentX=2646
_ExtentY=1323
_StockProps=0
VersionMajor=1
VersionMinor=2
VersionInternal=1
VersionBuild=67
_ItemList="CS;ISI;ITI;SaveTimes;CheckAbort"
_VersionPersist=1
FlowLines(0).Count=5
FlowLines(0).FlowItem(0).Name="CS"
FlowLines(0).FlowItem(1).Name="ISI"
FlowLines(0).FlowItem(2).Name="ITI"
FlowLines(0).FlowItem(3).Name="SaveTimes"
FlowLines(0).FlowItem(4).Name="CheckAbort"
LogData=1
Name="TrialProcUnpaired"
TypeName="Procedure"
Tag=""
Notes=""

[Object26]
_Version=131072
_ExtentX=2646
_ExtentY=1323
_StockProps=0
VersionMajor=1
VersionMinor=2
VersionInternal=1
VersionBuild=67
_VersionPersist=1
Code="' save times that are available in the paired condition\nc.SetAttrib \"Swallow_Onset\", (Swallow.OnsetTime - lStartOfMRI)"
Name="SaveTimesPaired"
TypeName="InLine"
Tag=""
Notes=""

[Object27]
_Version=65536
_ExtentX=2646
_ExtentY=1323
_StockProps=0
VersionMajor=1
VersionMinor=2
VersionInternal=1
VersionBuild=67
Logging("OnsetDelay").Log=0
Logging("OnsetTime").Log=0
Logging("DurationError").Log=0
Logging("PreRelease").Log=0
Logging("Duration").Log=0
Logging("StartTime").Log=0
Logging("OffsetTime").Log=0
Logging("FinishTime").Log=0
Logging("TimingMode").Log=0
Logging("CustomOnsetTime").Log=0
Logging("CustomOffsetTime").Log=0
Logging("ActionDelay").Log=0
Logging("ActionTime").Log=0
Logging("TargetOffsetTime").Log=0
Logging("TargetOnsetTime").Log=0
Logging("OffsetDelay").Log=0
Logging("RTTime").Log=0
Logging("ACC").Log=0
Logging("RT").Log=0
Logging("RESP").Log=0
Logging("CRESP").Log=0
Logging("Tag").Log=0
_VersionPersist=1
VersionMajor=1
VersionMinor=2
VersionInternal=1
VersionBuild=67
Text="+"
ForeColor="black"
BackColor="silver"
BackStyle="opaque"
BorderColor="black"
BorderWidth="0"
X="center"
Y="center"
Width="100%"
Height="100%"
XAlign="center"
YAlign="center"
AlignHorizontal="center"
AlignVertical="center"
FontName="Courier New"
FontSize="36"
FontBold="Yes"
FontItalic="No"
FontUnderline="No"
FontStrikeout="No"
WordWrap=1
ClearAfter="No"
Duration="[ITI]"
JumpLabel=""
TimingMode=0
PreRelease="0"
OnsetSync=1
OffsetSync=0
Name="ITI"
TypeName="TextDisplay"
Tag=""
Notes=""

[Object28]
_Version=131072
_ExtentX=2646
_ExtentY=1323
_StockProps=0
VersionMajor=1
VersionMinor=2
VersionInternal=1
VersionBuild=67
_VersionPersist=1
Code="' Fancy messages instead of pump1, pump2\nPUMP_names(1) = \"Choco\"\nPUMP_names(2) = \"Saliva\"\n\n' also put those names into log-file\nc.SetAttrib \"Taste1\", PUMP_names(1)\nc.SetAttrib \"Taste2\", PUMP_names(2)\n\n' Configure the bolus delivery duration of both pumps (used in PreparePumps)\n' note that the duration is limited by the min/max rate of the pump (see PrepareBolus)\nPUMP_duration(1) = 1.0 ' [sec]\nPUMP_duration(2) = 4.0 ' [sec]\n\n"
Name="PumpParameters"
TypeName="InLine"
Tag=""
Notes=""

[UserScript]
' This script uses the DianetStarCOM.DLL function library for communicating with the BBraun infusion pump
' device. The DLL must be installed (or copied) in the Windows system directory or
' in the same directory of the EPrime script. The function calls are declared
' in the user script (View->Script->User tab)

Dim lStartOfMRI as long 		' this will hold the RTTime of WaitMRI (i.e. start of scanner)
Const BolusPrepDuration% = 300 	' estimated preparation/transmission duration: setup of about 300ms (upper limit) 
								' In most cases it will be 200ms, so the delivery is started a bit earlier
Const PumpKeepAliveInterval% = 500 ' must keep connection alive in background

#const DEBUG_LEVEL = 1			' set to 0 to print only errors, 1 to print relevant stuff, or 2 to print everything

'Dim PUMP_handles(1 to 1) as long ' device handle for one pump
Dim PUMP_handles(1 to 2) as long ' device handles for two pumps
Dim PUMP_names(1 to 2) as String ' pump names ('ie Choco, Saliva); configured in 'PumpParameters'
Dim PUMP_duration(1 to 2) as Single ' bolus delivery duration in seconds; configured in 'PumpParameters'

'++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
' DIANET STAR interfacing with DianetStarCOM.dll

Dim lResult As Long ' keep a global for result: stop communication a.s.a. one function fails (i.e. lResult<>0)

'++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
' Declare all function prototypes

' import undecorated DianetStarCOM.DLL calls:
Declare Function DIANETINTERFACE_Connect			Lib "DianetStarCOM" ( _
			ByVal strPort As String, _
			ByVal strDevice as String) as Long

Declare Sub      DIANETINTERFACE_Disconnect			Lib "DianetStarCOM" (ByVal comhandle as long)
Declare Function DIANETINTERFACE_IsConnected 		Lib "DianetStarCOM" (ByVal comhandle as long) as Long
Declare Sub      DIANETINTERFACE_ResetConnection    Lib "DianetStarCOM" (ByVal comhandle as long) 

Const CDS_LOGLEVEL_ERROR%		= 0
Const CDS_LOGLEVEL_WARN%		= 1
Const CDS_LOGLEVEL_INFO%		= 2
Const CDS_LOGLEVEL_IO%			= 3

Declare Function DIANETINTERFACE_OpenLogFile 		Lib "DianetStarCOM" ( _
			ByVal softversion As String, _
			ByVal appendlog As Long, _
			ByVal loglevel As Long, _
			ByVal mytime_ms As Long _ 
			) as Long

Declare Function DIANETINTERFACE_CloseLogFile 		Lib "DianetStarCOM" () as Long

Declare Sub DIANETINTERFACE_LogMessage 				Lib "DianetStarCOM" ( _
			ByVal strMessage As String, _
			ByVal loglevel As Long)

Declare Sub DIANETINTERFACE_SetLogTimer 			Lib "DianetStarCOM" ( _
			ByVal mytime_ms As Long)

Declare Function DIANETINTERFACE_GetIdent			Lib "DianetStarCOM" ( _
			ByVal comhandle as long, _
			ByRef serial As Long, _
			ByRef typeid As Long, _
			ByRef protoversion As Integer, _
			ByRef unixtime As Long, _
			ByVal softversion As String, _
			ByVal buflen As Long) as Long


Const CDS_MODE_DOKU%		= 0	' Startzustand Dokumentationsbetrieb 
Const CDS_MODE_FERNSTEUER% 	= 1	' Fernsteuerbetrieb Bedienung an Pumpe erlaubt 
Const CDS_MODE_FERNREGEL%	= 2	' Fernregelbetrieb Bedienung an Pumpe nicht erlaubt 
Const CDS_MODE_MONREQ%		= 3	' Monitoraktivierung wird erwartet 

Declare Function 	DIANETINTERFACE_SetMode 		Lib "DianetStarCOM" ( _
			ByVal comhandle as long, _
			ByVal newaddres as long, _
			ByVal newmode as long, _
			ByVal unixtime as long) as Long


Declare Sub 	DIANETINTERFACE_InitHeartbeat 		Lib "DianetStarCOM" ( _
			ByVal comhandle as long, _
			ByVal interval_ms as long)

Declare Function DIANETINTERFACE_GetStatus	Lib "DianetStarCOM" ( _
			ByVal comhandle as long, _
			ByRef request As Long, _
			ByRef alarm As Long, _
			ByRef state As Long, _
			ByRef irate As Long, _
			ByRef remainvtbd As Long, _
			ByRef remaintime As Long) as Long

Declare Function 	DIANETINTERFACE_SetTargetValue 		Lib "DianetStarCOM" ( _
			ByVal comhandle as long, _
			ByVal rate_10ul_h as long, _
			ByVal vtbd_100ul as long, _
			ByVal time_min as long, _
			ByVal bolrate_10ul_h as long, _
			ByVal bolvol_100ul as long, _
			ByVal pressurelimitmax as long, _
			ByVal stdby_min as long, _
			ByVal szMedication as String) as Long

Declare Function 	DIANETINTERFACE_GetLimits 		Lib "DianetStarCOM" ( _
			ByVal comhandle as long, _
			ByRef bolmax_10ul_h as long, _
			ByRef personal as long, _
			ByRef resdisp as long, _
			ByRef ratemax_10ul_h as long, _
			ByRef ratemin_10ul_h as long, _
			ByRef syringeprealarm_min as long, _
			ByRef specialfn as long, _
			ByRef pressmax as long, _
			ByRef vtbdmax_100ul as long, _
			ByRef bolvolmax_100ul as long, _
			ByRef bolratemin_10ul_h as long, _
			ByRef bolvolmin_100ul as long, _
			ByRef resbol as long, _
			ByRef caratemax_10ul_h as long, _
			ByRef caratemin_10ul_h as long, _
			ByRef ccratemax_10ul_h as long, _
			ByRef ccratemin_10ul_h as long) as Long


' action ID's for DIANETINTERFACE_SetAction:
Const CDS_ACT_START_STOP% =		0	' Pumpe starten / stoppen 
Const CDS_ACT_ALARM_ON% = 		1	' Alarme sperren / freigeben 
Const CDS_ACT_DATA_LOCK% = 		2	' Eingabe sperren / freigeben 
Const CDS_ACT_INFUSED_TIME_0% = 3	' 1= loescht Gesamtzeit seit Einschalten 
Const CDS_ACT_INFUSED_VOL_0% = 	4	' 1= loescht Gesamtvolumen seit Einschalten 
Const CDS_ACT_BOL_MAN_START% = 	5	' startet Bolus fuer 1s / Stop Bolus 
Const CDS_ACT_BOL_VOL_START% = 	6	' startet Volumenbolus / Stop Bolus & loesche <BOL_VOL> 
Const CDS_ACT_KONTR_DROP_ON% = 7	' Tropfueberwachung ein / aus 
Const CDS_ACT_STDBY% =	 		8	' Standby-Funktion ein / aus 
Const CDS_ACT_HISTORY_CLEAR% = 	9	' 1= History-Speicher loeschen 
Const CDS_ACT_DOSIS_OFF% = 		10	' 1=Dosiskalkulation ausschalten 
Const CDS_ACT_BOL_INTV_OFF% = 	11	' 1=Intervallbolus ausschalten 

' action values for DIANETINTERFACE_SetAction:
Const CDS_ACTION_ON% =	1 	' function ON
Const CDS_ACTION_OFF% = 0 	' funciton OFF
Const CDS_ACTION_NOP% = 255	' no change

Declare Function 	DIANETINTERFACE_SetAction 		Lib "DianetStarCOM" ( _
			ByVal comhandle as long, _
			ByVal action_id as long, _
			ByVal value as long) as Long

'++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
' DIANET STAR interfacing helper functions

Function GetErrorStr(nr as Long)
	Select Case nr
		Case 0
			GetErrorStr = "no error"
		Case 1
			GetErrorStr = "CRC checksum failure"
		Case 2 
			GetErrorStr = "Framing error"
		Case 3
			GetErrorStr = "Illegal segment number"
		Case 4 
			GetErrorStr = "User mode failure"
		Case 5 
			GetErrorStr = "Ident failure"
		Case 6 
			GetErrorStr = "Data range failure"
		Case 7 
			GetErrorStr = "Wrong segment length"
		Case 8 
			GetErrorStr = "Illegal Adress"
		Case 9 
			GetErrorStr = "Illegal Mode"
		Case 10 
			GetErrorStr = "Errno #10"
		Case 11
			GetErrorStr = "Clock locked"
		Case 12
			GetErrorStr = "Action failure"
		Case 13
			GetErrorStr = "Context failure"
		Case 14
			GetErrorStr = "Timeout"
		Case 15
			GetErrorStr = "RS232 port not initialized"
		Case 16
			GetErrorStr = "RS232 failure"
		Case Else 
			GetErrorStr = "unknown (" & str(nr) & ")"
	End Select
end function

Function SelectPortAndConnect(vMsgOpt as Variant) as Long

	Dim strMessage as String
	Dim strPortName as String
	Dim iButton As Integer
	Dim iMarkerMode As Integer
	Dim bRetry As Boolean
	Dim vAnswer As Variant
	Dim bMouseWasVisible as Boolean
	Dim comhandle as Long
	Dim strMsg as String
	Dim bSuccess as Boolean

	SelectPortAndConnect = -1

	if isMissing(vMsgOpt) then
		strMsg = "Choose serial port"
	else
		strMsg = vMsgOpt
	end if

	bMouseWasVisible = Mouse.IsCursorVisible()
	if Not bMouseWasVisible then
		Mouse.ShowCursor True
	end if
	bRetry = True

	while (bRetry)
		Dim arrayChoicesComPort(6)
		arrayChoicesComPort(0) = "COM1"
		arrayChoicesComPort(1) = "COM2"
		arrayChoicesComPort(2) = "COM3"
		arrayChoicesComPort(3) = "COM4"
		arrayChoicesComPort(4) = "COM5"
		arrayChoicesComPort(5) = "COM6"
		vAnswer = SelectBox(, strMsg, arrayChoicesComPort)
		If vAnswer >= 0 then
			strPortName = arrayChoicesComPort(vAnswer)
'			c.SetAttrib "ComPort", arrayChoicesComPort(vAnswer)

			comhandle = DIANETINTERFACE_Connect(strPortName , "")
			if comhandle = -1 then
				strMessage = "Failed to open port: " & strPortName
			else

				Dim serial As Long
				Dim typeid As Long
				Dim protoversion As Integer
				Dim unixtime As Long
				Dim softversion As String
				Dim szType As String
				Dim buflen As Long
				softversion = Space$(32)
				lResult = DIANETINTERFACE_GetIdent(comhandle, serial, typeid, protoversion, unixtime, softversion, 32)

				if lResult<>0 then
					strMessage = "Couldn't get state!  lResult=" & GetErrorStr(lResult)
				else
					Select Case (typeid)
					case  202
						szType = "Infusomat fmS"
					case  203
						szType = "Infusomat P"
						bSuccess = true
					case 1019
						szType = "Perfusor fm"
					case 1020
						szType = "Perfusor fm ul-Aachen"
					case 1200
						szType = "Perfusor compact"
					case 1201
						szType = "Perfusor compact S"
					case else
						szType = "Unknown " & typeid
					End Select
					strMessage = "Type = [" & szType & "], Version = [" & Trim$(softversion) & "]"
					#if DEBUG_LEVEL>=1 then
						Debug.Print strMessage
					#end if
				end if
			end if

			If bSuccess Then
				' just continue without feedback if type was OK
				bRetry = False
				SelectPortAndConnect = comhandle
			Else
				iButton = AnswerBox(strMessage, "Retry", "Continue", "Cancel", "Device info")
				Select Case iButton
					Case 1
						DIANETINTERFACE_Disconnect(comhandle)
						bRetry = True
					Case 2 
						bRetry = False
						SelectPortAndConnect = comhandle
					Case Else 
						DIANETINTERFACE_Disconnect(comhandle)
						bRetry = False
				End Select
			End if
		Else
			bRetry = False
		End If

	wend

	if Not bMouseWasVisible then
		Mouse.ShowCursor False
	end if
	
End Function


Function EnterCCmode(ByVal comhandle as long) as boolean
	if DIANETINTERFACE_IsConnected(comhandle) then
		lResult = DIANETINTERFACE_SetMode(comhandle,1,CDS_MODE_FERNREGEL%,0)
		if lResult=0 then
			DIANETINTERFACE_InitHeartbeat comhandle, PumpKeepAliveInterval
		end if
		#if DEBUG_LEVEL>=1 then
			if lResult=0 then
				Debug.Print "Switched to CC mode and started keep-connected signal"
			else
				Debug.Print "ERROR: failed to switch to CC mode: " & GetErrorStr(lResult)
			end if
		#end if
	end if
	EnterCCmode = lResult=0
end Function

Sub PrintHandle(ByVal comhandle as long)
	Dim iPump as Integer
	for iPump=LBound(PUMP_handles) to UBound(PUMP_handles)
		if comhandle=PUMP_handles(iPump) then
			Debug.Print "Pump " & iPump & " = " & comhandle
			exit sub
		end if
	next
	Debug.Print "Unknown Device handle: " & comhandle
end Sub

Sub PrintStatus(ByVal comhandle as long) 
	#if DEBUG_LEVEL>=1 then
		if DIANETINTERFACE_IsConnected(comhandle) then
			Dim request as long
			Dim alarm as long
			Dim state as long
			Dim irate as long
			Dim remainvtbd as long
			Dim remaintime as Long

			lResult = DIANETINTERFACE_GetStatus(comhandle, request, alarm, state, irate, remainvtbd, remaintime)
			PrintHandle comhandle
			Debug.Print "GetStatus lResult = " & GetErrorStr(lResult)
			if lResult=0 then
				Debug.Print "GetStatus: request = " & request
				Debug.Print "GetStatus: alarm = " & alarm
				Debug.Print "GetStatus: state = " & state
				Debug.Print "GetStatus: irate = " & irate
				Debug.Print "GetStatus: remainvtbd = " & remainvtbd
				Debug.Print "GetStatus: remaintime = " & remaintime
			end if
			Debug.Print "."
		end if
	#end if
end Sub 

Sub PrintLimits(ByVal comhandle as long) 
	#if DEBUG_LEVEL>=2 then
		if DIANETINTERFACE_IsConnected(comhandle) then
			if lResult=0 then
				Dim bolmax_10ul_h as long
				Dim personal as long
				Dim resdisp as long
				Dim ratemax_10ul_h as long
				Dim ratemin_10ul_h as long
				Dim syringeprealarm_min as long
				Dim specialfn as long
				Dim pressmax as long
				Dim vtbdmax_100ul as long
				Dim bolvolmax_100ul as long
				Dim bolratemin_10ul_h as long
				Dim bolvolmin_100ul as long
				Dim resbol as long
				Dim caratemax_10ul_h as long
				Dim caratemin_10ul_h as long
				Dim ccratemax_10ul_h as long
				Dim ccratemin_10ul_h as long

				lResult = DIANETINTERFACE_GetLimits(comhandle, _
					bolmax_10ul_h, personal, resdisp, ratemax_10ul_h, ratemin_10ul_h, _
					syringeprealarm_min, specialfn, pressmax, vtbdmax_100ul, _
					bolvolmax_100ul, bolratemin_10ul_h, bolvolmin_100ul, resbol, _
					caratemax_10ul_h, caratemin_10ul_h, ccratemax_10ul_h, ccratemin_10ul_h)

				PrintHandle comhandle
				Debug.Print "GetLimits lResult = " & GetErrorStr(lResult)
				if lResult=0 then
					Debug.Print "GetLimits: bolmax_10ul_h = " & bolmax_10ul_h
					Debug.Print "GetLimits: personal = " & personal
					Debug.Print "GetLimits: resdisp = " & resdisp
					Debug.Print "GetLimits: ratemax_10ul_h = " & ratemax_10ul_h
					Debug.Print "GetLimits: ratemin_10ul_h = " & ratemin_10ul_h
					Debug.Print "GetLimits: syringeprealarm_min = " & syringeprealarm_min
					Debug.Print "GetLimits: specialfn = " & specialfn
					Debug.Print "GetLimits: pressmax = " & pressmax
					Debug.Print "GetLimits: vtbdmax_100ul = " & vtbdmax_100ul
					Debug.Print "GetLimits: bolvolmax_100ul = " & bolvolmax_100ul
					Debug.Print "GetLimits: bolratemin_10ul_h = " & bolratemin_10ul_h
					Debug.Print "GetLimits: bolvolmin_100ul = " & bolvolmin_100ul
					Debug.Print "GetLimits: resbol = " & resbol
					Debug.Print "GetLimits: caratemax_10ul_h = " & caratemax_10ul_h
					Debug.Print "GetLimits: caratemin_10ul_h = " & caratemin_10ul_h
					Debug.Print "GetLimits: ccratemax_10ul_h = " & ccratemax_10ul_h
					Debug.Print "GetLimits: ccratemin_10ul_h = " & ccratemin_10ul_h
				end if
				Debug.Print "."
			end if
		end if
	#end if
end Sub 

Function PrepareBolus(ByVal comhandle as long, ml as Single, dur_sec as Single, n as integer, szMedication as String) as boolean
	' A manual bolus lasts 1 sec, so the rate determines the volume (this mode is not very accurate, however)
	' For a volume bolus you can also specify the duration of a delivery, however
	' you must reconfigure the bolus volume each time using PrepareVolBolus
	' Just set dur_sec to zero to configure for max. rate

	if DIANETINTERFACE_IsConnected(comhandle) then

		' First get limits
		'     bolmax: 99990 [0.01ml/h]
		'   personal: 0x11
		'             0x01 = static
		'             0x10 = pre-alarm
		'    resdisp: 1
		'    ratemax: 99990 [0.01ml/h]
		'    ratemin: 0 [0.01ml/h]
		'syrprealarm: N/A [min]
		'  specialfn: 0x27
		'             0x01 = Bolus function available
		'             0x02 = Standby function available
		'             0x04 = Adjustment of pressure levels is possible
		'             0x20 = Dose calculation is available
		'   pressmax: 2
		'    vtbdmax: 99999 [0.1ml]
		'  bolvolmax: 5000 [0.1ml]
		' bolratemin: 100 [0.01ml/h]
		'  bolvolmin: 1 [0.1ml]
		'     resbol: 1
		'  CAratemax: 99990 [0.01ml/h]
		'  CAratemin: 10 [0.01ml/h]
		'  CCratemax: 99990 [0.01ml/h]
		'  CCratemin: 0 [0.01ml/h]
		Dim bolmax_10ul_h as long
		Dim personal as long
		Dim resdisp as long
		Dim ratemax_10ul_h as long
		Dim ratemin_10ul_h as long
		Dim syringeprealarm_min as long
		Dim specialfn as long
		Dim pressmax as long
		Dim vtbdmax_100ul as long
		Dim bolvolmax_100ul as long
		Dim bolratemin_10ul_h as long
		Dim bolvolmin_100ul as long
		Dim resbol as long
		Dim caratemax_10ul_h as long
		Dim caratemin_10ul_h as long
		Dim ccratemax_10ul_h as long
		Dim ccratemin_10ul_h as long

		if lResult=0 then
			lResult = DIANETINTERFACE_GetLimits(comhandle, _
				bolmax_10ul_h, personal, resdisp, ratemax_10ul_h, ratemin_10ul_h, _
				syringeprealarm_min, specialfn, pressmax, vtbdmax_100ul, _
				bolvolmax_100ul, bolratemin_10ul_h, bolvolmin_100ul, resbol, _
				caratemax_10ul_h, caratemin_10ul_h, ccratemax_10ul_h, ccratemin_10ul_h)
		end if

		' set target value
		if lResult=0 then
			Dim rate_10ul_h as long
			Dim vtbd_100ul as long
			Dim time_min as long
			Dim bolrate_10ul_h as long
			Dim bolvol_100ul as long
			Dim pressurelimitmax as long
			Dim stdby_min as long

			bolvol_100ul = CLng(ml*10)

			if dur_sec>0 then
				'dur_sec = 1.0 ' manual bolus has a fixed duration of 1 sec
				bolrate_10ul_h = CLng(bolvol_100ul * 10 * 3600.0/dur_sec )
				if bolrate_10ul_h>ccratemax_10ul_h then
					bolrate_10ul_h = ccratemax_10ul_h
					MsgBox("Warning: bolus rate reduced to max: " & bolrate_10ul_h & " [10ul/h]")
				elseif bolrate_10ul_h<ccratemin_10ul_h then
					bolrate_10ul_h = ccratemin_10ul_h
					MsgBox("Warning: bolus rate reduced to min: " & bolrate_10ul_h & " [10ul/h]")
				end if
			else
				bolrate_10ul_h = ccratemax_10ul_h ' just go with max flow
			end if
			' this is the real duration according to the configured rate and volume:
			dur_sec = bolvol_100ul * 10 * 3600.0 / bolrate_10ul_h

			if n<=0 then
				' just set to max value allowed when no bolus count is specified
				vtbd_100ul = vtbdmax_100ul
			else
				' set volume to expected value + 1
				' add one to make sure the mump doesn't fallback to CA mode at the end 
				' (this will trigger a rate compatibility alarm)
				vtbd_100ul = n*bolvol_100ul+1 
			end if
			pressurelimitmax = pressmax
			stdby_min = 60 ' although standby is not activated on our pumps
			if Len(szMedication)=0 then
				szMedication = "BOLUS " & CStr(ml) & " [ml] in " & CStr(dur_sec) & " [sec]"
			end if

			lResult = DIANETINTERFACE_SetTargetValue(comhandle, rate_10ul_h, vtbd_100ul, time_min, bolrate_10ul_h, bolvol_100ul, pressurelimitmax, stdby_min, szMedication)
			#if DEBUG_LEVEL>=2 then
				PrintHandle comhandle
				Debug.Print "SetTarget lResult = " & GetErrorStr(lResult)
				Debug.Print "SetTarget: bolvol_100ul = " & bolvol_100ul
				Debug.Print "SetTarget: bolrate_10ul_h = " & bolrate_10ul_h
				Debug.Print "SetTarget: vtbd_100ul = " & vtbd_100ul
				Debug.Print "SetTarget: rate_10ul_h = " & rate_10ul_h
				Debug.Print "SetTarget: time_min = " & time_min
				Debug.Print "SetTarget: pressurelimitmax = " & pressurelimitmax
				Debug.Print "SetTarget: stdby_min = " & stdby_min
				Debug.Print "SetTarget: szMedication = " & szMedication
				Debug.Print "."
			#end if
		end if

	end if

	PrepareBolus = lResult=0
End Function

Function PrepareVolBolus(ByVal comhandle as long, ml as Single, szMedication as String) as boolean
	' A volume bolus must be reconfigured each delivery
	' Make sure to configure first with PrepareBolus

	if DIANETINTERFACE_IsConnected(comhandle) then

		' set target value
		if lResult=0 then
			Dim bolvol_100ul as long
			bolvol_100ul = CLng(ml*10)

			if Len(szMedication)=0 then
				szMedication = "VOL BOLUS: " & CStr(ml) & " [ml]"
			end if

			lResult = DIANETINTERFACE_SetTargetValue(comhandle, -1, -1, -1, -1, bolvol_100ul, -1, -1, szMedication)
			#if DEBUG_LEVEL>=2 then
				PrintHandle comhandle
				Debug.Print "SetTarget lResult = " & GetErrorStr(lResult)
				Debug.Print "SetTarget: bolvol_100ul = " & bolvol_100ul
				Debug.Print "SetTarget: szMedication = " & szMedication
				Debug.Print "."
			#end if
		end if

	end if

	PrepareVolBolus = lResult=0
End Function

Function GetState(ByVal comhandle as long) as Long
	if DIANETINTERFACE_IsConnected(comhandle) then
		' first get current status
		if lResult=0 then
			Dim request as long
			Dim alarm as long
			Dim state as long
			Dim irate as long
			Dim remainvtbd as long
			Dim remaintime as Long

			lResult = DIANETINTERFACE_GetStatus(comhandle, request, alarm, state, irate, remainvtbd, remaintime)
			if lResult=0 then
				GetState = state
			end if
			#if DEBUG_LEVEL>=2 then
				Debug.Print "GetStatus lResult = " & GetErrorStr(lResult)
				if lResult=0 then
					Debug.Print "GetStatus: state = " & state
				end if
				Debug.Print "."
			#end if
		end if
	end if 
end Function

Function BolusRunning(ByVal comhandle as long) as boolean
	BolusRunning = (GetState(comhandle) And &H400)<>0
end Function

Function StartPump(ByVal comhandle as long) as boolean
	if DIANETINTERFACE_IsConnected(comhandle) then
		' start bolus
		if lResult=0 then
			lResult = DIANETINTERFACE_SetAction(comhandle, CDS_ACT_START_STOP%, CDS_ACTION_ON%)
			#if DEBUG_LEVEL>=2 then
				PrintHandle comhandle
				Debug.Print "SetAction(START_PUMP) lResult = " & GetErrorStr(lResult)
				Debug.Print "."
			#end if
		end if
	end if
	StartPump = lResult=0
end Function

Function StopPump(ByVal comhandle as long) as boolean
	if DIANETINTERFACE_IsConnected(comhandle) then
		' start bolus
		if lResult=0 then
			lResult = DIANETINTERFACE_SetAction(comhandle, CDS_ACT_START_STOP%, CDS_ACTION_OFF%)
			#if DEBUG_LEVEL>=2 then
				PrintHandle comhandle
				Debug.Print "SetAction(STOP_PUMP) lResult = " & GetErrorStr(lResult)
				Debug.Print "."
			#end if
		end if
	end if
	StopPump = lResult=0
end Function

Function StartBolus(ByVal comhandle as long, bManualBolus as Boolean) as boolean
	' StartPump before starting bolus!
	if DIANETINTERFACE_IsConnected(comhandle) then
		' start bolus
		if lResult=0 then
			lResult = DIANETINTERFACE_SetAction(comhandle, Iif(bManualBolus,CDS_ACT_BOL_MAN_START%,CDS_ACT_BOL_VOL_START%), CDS_ACTION_ON%)
			#if DEBUG_LEVEL>=2 then
				PrintHandle comhandle
				Debug.Print "SetAction(BOL_MAN/VOL_START) lResult = " & GetErrorStr(lResult)
'				Debug.Print "."
			#end if
		end if
	end if
	StartBolus = lResult=0
end Function

Function DropMonitoring(ByVal comhandle as long, ByVal bOnOff as boolean) as boolean
	if DIANETINTERFACE_IsConnected(comhandle) then
		if lResult=0 then
			lResult = DIANETINTERFACE_SetAction(comhandle, CDS_ACT_KONTR_DROP_ON%, IIf(bOnOff,CDS_ACTION_ON%,CDS_ACTION_OFF%))
			#if DEBUG_LEVEL>=2 then
				PrintHandle comhandle
				Debug.Print "SetAction(KONTR_DROP_ON/OFF) lResult = " & GetErrorStr(lResult)
				Debug.Print "."
			#end if
		end if
	end if
	DropMonitoring = lResult=0
end Function

Function ResetInfusedVolume(ByVal comhandle as long) as boolean
	if DIANETINTERFACE_IsConnected(comhandle) then
		if lResult=0 then
			lResult = DIANETINTERFACE_SetAction(comhandle, CDS_ACT_INFUSED_VOL_0%, CDS_ACTION_ON%)
			#if DEBUG_LEVEL>=2 then
				PrintHandle comhandle
				Debug.Print "SetAction(RESET_INFUSED_VOL) lResult = " & GetErrorStr(lResult)
				Debug.Print "."
			#end if
		end if
	end if
	ResetInfusedVolume = lResult=0
end Function

'++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
' DIANET STAR interfacing ends here

